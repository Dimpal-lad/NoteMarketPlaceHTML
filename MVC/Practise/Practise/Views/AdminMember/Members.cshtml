@using PagedList;
@using PagedList.Mvc;

@model IPagedList<Practise.Models.tblUser>
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<div class="container-m_ad">
    @using (Html.BeginForm("Members", "AdminMember", FormMethod.Get))
    {
        <div class="row">
            <div class="col-md-6">
                <h3>Members</h3>
            </div>
            <div class="col-md-4">
                <input type="text" class="form-control" id="search-ds" name="searchTxt" placeholder="&#xf002;  Search">

            </div>
            <div class="col-md-2">
                <button type="submit" class="form-control" id="search-ds01">SEARCH</button>
            </div>
        </div>
    }
    <table class="table border">
        <thead>
            <tr class="table11" style="height: 75px;">
                <th scope="col" style="vertical-align: middle;">SR NO.</th>
                <th scope="col" style="vertical-align: middle;text-align: left;">@Html.ActionLink("FIRST NAME", "Members", new { sortOrder = ViewBag.FirstSortParm })</th>
                <th scope="col" style="vertical-align: middle;text-align: left;">@Html.ActionLink("LAST NAME", "Members", new { sortOrder = ViewBag.LastSortParm })</th>
                <th scope="col" style="vertical-align: middle;text-align: left;">@Html.ActionLink("EMAIL", "Members", new { sortOrder = ViewBag.EmailIDSortParm })</th>
                <th scope="col" style="vertical-align: middle;text-align: left;">@Html.ActionLink("JOINING DATE", "Members", new { sortOrder = ViewBag.CreatedDateParm })</th>
                <th scope="col" style="vertical-align: middle;">@Html.ActionLink("UNDER REVIEW NOTES", "Members", new { sortOrder = ViewBag.UnderReviewNoteSortParm })</th>
                <th scope="col" style="vertical-align: middle;">@Html.ActionLink("PUBLISHED NOTES", "Members", new { sortOrder = ViewBag.PublishNoteSortParm })</th>
                <th scope="col" style="vertical-align: middle;">@Html.ActionLink("DOWNLOADED NOTES", "Members", new { sortOrder = ViewBag.DownloadNoteSortParm })</th>
                <th scope="col" style="vertical-align: middle;">@Html.ActionLink("TOTAL EXPENSES", "Members", new { sortOrder = ViewBag.TotalExpenseSortParm })</th>
                <th scope="col" style="vertical-align: middle;">@Html.ActionLink("TOTAL EARNINGS", "Members", new { sortOrder = ViewBag.TotalEarningSortParm })</th>
                <th scope="col" style="vertical-align: middle;"></th>
            </tr>
        </thead>
        <tbody>
            @{
                var count = 0;
            }
            @if (Model.Count() == 0)
            {
                <tr>
                    <td colspan="6" class="text-center">
                        No record found
                    </td>
                </tr>
            }
            @foreach (var item in Model)
            {
                <tr class="table2">
                    <td style="vertical-align: middle;">@(count + ((Model.PageNumber - 1) * Model.PageSize) + 1)</td>
                    <td style="vertical-align: middle;text-align: left;">@item.FirstName</td>
                    <td style="vertical-align: middle;text-align: left;">@item.LastName</td>
                    <td style="vertical-align: middle;text-align: left;">@item.EmailID</td>
                    <td style="vertical-align: middle;text-align: left;">@item.CreatedDate</td>
                    <td style="vertical-align: middle;color: #6255a5;">
                        <a href="/AdminNoteStatus/NotesUnderReview">
                            @item.tblSellerNotes.Where(x => x.tblReferenceData.RefCategory == "Notes Status" && (x.tblReferenceData.Value == "Submitted For Review" || x.tblReferenceData.Value == "In Review")).Select(x => x.ID).Count()
                        </a>
                    </td>
                    <td style="vertical-align: middle;color: #6255a5;">
                        <a href="/AdminNoteStatus/PublishNotes">
                            @item.tblSellerNotes.Where(x => x.tblReferenceData.RefCategory == "Notes Status" && x.tblReferenceData.Value == "Published").Select(x => x.ID).Count()
                        </a>
                    </td>
                    <td style="vertical-align: middle;color: #6255a5;">
                        <a href="/AdminNoteStatus/DownloadNote">
                            @item.tblDownloads.Where(x => x.Seller == x.tblUser.ID && x.IsSellerHasAllowedDownload == true).Count()
                        </a>
                    </td>
                    <td style="vertical-align: middle;color: #6255a5;">
                        <a href="/AdminNoteStatus/DownloadNote">
                            &#36;@item.tblDownloads1.Where(x => x.Downloader == item.ID && x.IsSellerHasAllowedDownload == true).Sum(x => x.PurchasedPrice)
                        </a>
                    </td>
                    <td style="vertical-align: middle;">&#36;@item.tblDownloads.Where(x => x.Seller == item.ID && x.IsSellerHasAllowedDownload == true).Sum(x => x.PurchasedPrice)</td>
                    <td style="vertical-align: middle;">
                        <div class="dropdown2">
                            <img src="~/Content/Admin/images/My Download/dots.png" class="dots">
                            <div class="dropdown-content2">
                                <a href="/AdminMember/MembersDetails/@item.ID">View More Details</a>
                                <a href="/AdminMember/Deactivate/@item.ID" onclick="return confirm('Are you sure you want to make this member inactive?');">Deactivate</a>
                            </div>
                        </div>
                    </td>
                </tr>
                count++;
            }

        </tbody>
    </table>

</div>

<!--Pagination-->
<div class="text-center">
    <ul class="pagination">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Members",
            new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }),
            new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, MaximumPageNumbersToDisplay = 5 })

    </ul>
</div>
